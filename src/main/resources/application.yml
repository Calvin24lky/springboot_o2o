server:
  port: 8080
  servlet:
    context-path: /o2o

spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/o2o?useUnicode=true&characterEncoding=UTF8&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池配置
      initial-size: 5
      max-active: 20
      min-idle: 5
      max-wait: 50000
      time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  # 一个连接在池中最小生存的时间，单位是毫秒
      # 是否缓存preparedStatement，也就是PSCache
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 20000
      test-on-borrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
                            # 如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。

      # StatViewServlet配置。（因为暴露的监控信息比较敏感，支持密码加密和访问ip限定）
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: 123456
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  redis:
    database: 0
    host: localhost
    port: 6379
    timeout: 3000
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8 # 连接池中的最大空闲连接 默认 8
        min-idle: 0 # 连接池中的最小空闲连接 默认 0

mybatis:
  mapper-locations: classpath:mapping/*.xml # 指定xml的路径
  type-aliases-package: com.example.springboot_o2o.entity  # 指定POJO包来让mybatis自动扫描到自定义POJO
  configuration:
    map-underscore-to-camel-case: true # 开启驼峰命名转换:Table{create_time} -> Entity{createTime}
    use-column-label: true # 使用列标签替换列别名 默认:true
    use-generated-keys: true # 使用jdbc的getGeneratedKeys获取数据库自增主键值
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 控制台打印sql语句

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

